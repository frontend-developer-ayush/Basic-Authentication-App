{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","console","log","adjExpirationTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","retriveStoredToken","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","setTimeout","contextValue","setItem","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","ProfileForm","history","useHistory","newPasswordInputref","useRef","form","onSubmit","event","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","AuthForm","isLogin","setIsLogin","isLoading","setIsLoading","emailInputRef","passwordInputRef","API_KEY","auth","url","enteredEmail","enteredPasword","email","ok","json","data","Error","expiresIn","toISOString","catch","err","alert","message","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd735a74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__16e7j\",\"control\":\"ProfileForm_control__3AnJX\",\"action\":\"ProfileForm_action__3arXL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__36rHh\",\"logo\":\"MainNavigation_logo__1BwYh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__1Wuts\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__7WtwJ\"};","import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n  const currentTime = new Date().getTime();\r\n  console.log(currentTime);\r\n  const adjExpirationTime = new Date(expirationTime).getTime();\r\n  console.log(adjExpirationTime);\r\n\r\n  const remainingDuration = adjExpirationTime - currentTime;\r\n\r\n  return remainingDuration;\r\n};\r\n\r\nconst retriveStoredToken = () => {\r\n  const storedToken = localStorage.getItem(\"token\");\r\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\r\n\r\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\r\n  if (remainingTime <= 60000) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n    return null;\r\n  }\r\n  return {\r\n    token: storedToken,\r\n    duration: remainingTime,\r\n  };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retriveStoredToken();\r\n  //   const initialToken = localStorage.getItem(\"token\");\r\n  let initialToken;\r\n  if (tokenData) {\r\n    initialToken = tokenData.token;\r\n  }\r\n  const [token, setToken] = useState(initialToken);\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const logoutHandler = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n\r\n    if (logoutTimer) {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, []);\r\n\r\n  const loginHandler = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expirationTime\", expirationTime);\r\n\r\n    const remainingTime = calculateRemainingTime(expirationTime);\r\n    console.log(remainingTime);\r\n\r\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tokenData) {\r\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n    }\r\n  }, [tokenData, logoutHandler]);\r\n\r\n  const contextValue = {\r\n    token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\n\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n\n  const isLoggedIn = authCtx.isLoggedIn;\n\n  const logoutHandler = () => {\n    authCtx.logout();\n  };\n\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to=\"/auth\">Login</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to=\"/profile\">Profile</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useContext, useRef } from \"react\";\nimport { useHistory } from \"react-router\";\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./ProfileForm.module.css\";\n\nconst ProfileForm = () => {\n  const history = useHistory();\n  const newPasswordInputref = useRef();\n  const API_KEY = \"AIzaSyBNK1jlj9LY2DR5PIy4uMFKtFoh5qQqUjw\";\n\n  const authCtx = useContext(AuthContext);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const enteredNewPassword = newPasswordInputref.current.value;\n\n    fetch(\n      `https://identitytoolkit.googleapis.com/v1/accounts:update?key=${API_KEY}`,\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          idToken: authCtx.token,\n          password: enteredNewPassword,\n          returnSecureToken: false,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then((res) => {\n      history.replace(\"/\");\n    });\n  };\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"new-password\">New Password</label>\n        <input\n          type=\"password\"\n          id=\"new-password\"\n          minLength=\"7\"\n          ref={newPasswordInputref}\n        />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useContext, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport AuthContext from \"../../store/auth-context\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const API_KEY = \"AIzaSyBNK1jlj9LY2DR5PIy4uMFKtFoh5qQqUjw\";\n\n  const authCtx = useContext(AuthContext);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPasword = passwordInputRef.current.value;\n\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${API_KEY}`;\n    } else {\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${API_KEY}`;\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPasword,\n        returnSecureToken: true,\n      }),\n      headers: { \"Content-Type\": \"application.json\" },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = \"Authentication Failed!\";\n\n            // if (data && data.error && data.error.message) {\n            //   errorMessage = data.error.message;\n            // }\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        console.log(data);\n        const expirationTime = new Date(\n          // prettier-ignore\n          new Date().getTime() + (+data.expiresIn * 1000)\n        );\n        authCtx.login(data.idToken, expirationTime.toISOString());\n        history.replace(\"/\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input ref={emailInputRef} type=\"email\" id=\"email\" required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            ref={passwordInputRef}\n            type=\"password\"\n            id=\"password\"\n            required\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Sending request...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useContext } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\nimport AuthContext from \"./store/auth-context\";\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        {!authCtx.isLoggedIn && (\n          <Route path=\"/auth\">\n            <AuthPage />\n          </Route>\n        )}\n\n        <Route path=\"/profile\">\n          {authCtx.isLoggedIn && <UserProfile />}\n          {!authCtx.isLoggedIn && <Redirect to=\"/auth\" />}\n        </Route>\n\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__3TJg6\",\"control\":\"AuthForm_control__WXDYc\",\"actions\":\"AuthForm_actions__3lgfw\",\"toggle\":\"AuthForm_toggle__3eKE5\"};"],"sourceRoot":""}